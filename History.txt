=== 0.4.2 / 2009-03-24

* Fixed "can't find site generator" bug that occured when creating a new project.
* Page field and table fields now support Firefox.

=== 0.4.1 / 2009-02-24

* Fixed bug with script\console:  no such file to load -- site_start

=== 0.4.0 / 2009-02-23

You will need to run "watircraft ." at the root of your project in order to 
update your test suite to work with this version of the WatirCraft Framework.

Summary

* Code for cucumber or rspec now runs in the same context. There is also a new
  console that allows you to run code in the same context. This should vastly
  simplify learnability and debugging options. Please try out the new script
  console.
  
* Added support for tables. Please see the rdoc for Page#table for details on
  how to use this.

Details on New Features

* Added script/console. This provides an interactive Ruby shell (irb) that 
  executes in the context of your site. Hopefully a useful learning and
  debugging tool. 
  
* Added new methods primarily intended to be used from within the script/console.
  In the default context (site), there is "pages" which returns a list of the 
  pages defined for the site. In the context of a page, there are "elements" and
  "fields". And also "elements_exist?" and "values". To get better formatted
  results, type "y" before these commands.

* Rspec tests ("describe" & "it") now execute in the context of a site, or at least
  something very similar. This makes it easier to share libraries between
  rspec and cucumber tests. Also easier to translate learning from one to the
  other.
  
* Added Page#element_exists? This method will return false if an intermediate
  part of the Watir syntax (e.g. frame) throws a Not Found exception. This makes
  page.element_exists(:my_element) better than using page.my_element.exists?

* Added Site#page method. Now, site.page("check out") is the same as 
  site.check_out_page

* You can now use strings as arguments to Page.element and Page.field. These
  strings can even be in "human-form" with spaces and capitolization. They will
  automatically be "computerized".

Other Changes

* Site#origin now returns the base url of the site. (Was: Site#url).

* Hard-coded dependencies on Cucumber 0.1.16 and Rspec 1.1.12. Previously, 
  watircraft would install the latest versions of these gems, which could
  create inconsistencies if installed over time on different machines. Now
  this won't happen. However, if newer versions are installed on your machine,
  they will be used.

* Updated to use Cucumber 0.1.16 instead of 0.1.13.

* Explicitly declare dependency on Watir 1.6.2 (or newer). Previously this
  was assumed.

=== 0.3.2 / 2009-02-04

Another patch release. Like 0.3.1, no need to update if your project is 
already at 0.3.x

* Fix "undefined method display_value" error that appeared when creating
  page fields with links or parents.

=== 0.3.1 / 2009-02-03

This patch release includes some fixes and an improved updater.

Update Notes

You can update an existing project created with a previous release 
by typing "watircraft ." in root of your project. 
(That is _watircraft space period_.)

If your project was created with or already updated to 0.3.0, you do not 
need to update (although it won't hurt if you do).

If your project was created with beta2 or previous, you will need to update
to use this version.

Improvements to Updater

* When using "watircraft" to update an existing project, you no longer
  have to specify the site name.
* When updating, the "correct" files will automatically be replaced.
* The initialize.rb file is now stamped with the time and version.

Fixes

* Automatically install cucumber when installing watircraft.
* Allow pages to be specified in camel case (or not) in the page generator.
* Changed method of declaring dependencies in an attempt to fix reported
  "could not find site generator" error which I cannot reproduce.
* Improved documentation for generators. (Type "watircraft" or 
  "script\generate page" to see this.)
* You can now use the cucumber command from inside the tests/features 
  directory (previously it would only work from project root).

=== 0.3.0 / 2009-02-02

Repackaged as watircraft gem version 0.3.0.

Features

* You can now get a list of the script/generate commands that are available to
  you by typing "script/generate" from the root of your project. Currently these
  are *page*, *spec* and *steps*. However, additional generators will be made 
  available in future versions of this framework, as well as other plug-ins.

Installation Instructions

  gem install watircraft

Update Instructions

If you have a project created with a prior version of watircraft (aka taza), you
will need to do the following.

# Open a command shell to the root of your project (i.e. where you type
  rake commands).
# Type "watircraft . --site=your_site_name". This will add some files and
  ask whether you want 
  to replace several files. Say yes ('y') and replace the following files (only):
  
  * script/destroy
  * script/generate
  * feature_helper.rb
  * spec_helper.rb
  * world.rb

User Visible Changes

* Renamed gem from "taza" to "watircraft".
* Rename "taza" command to "watircraft".
* Removed flow generator. Plan is to use Watirloo's use case class instead.
* Now uses rspec version 1.1.12.
* Added Readme and History files.
* Added initialize.rb file to test projects. This will simplify future updates.
* The "watircraft" command now takes an option to specify a site.

Technical Changes

* Merged in changes from Taza 0.8.2., including
  * Fix a bug in filters leading to infinite regress.
* Added rake task for Manifest.txt.
* Renamed generator_helper from taza to watircraft.
* Removed partials. Need to review how to provide this functionality in 
  watircraft.
* Taza generators are now WatirCraft generators.
* Executable version number is now automatically built from VERSION.yml.
  (With taza, you had to maintain this by hand)

Known Bugs

* Need to provide homepage for project.  

=== Beta 2 / 2009-01-23

Fixes

* Updated documentation for Taza::Page. It includes details on the element and
  field commands.
* Fix bug preventing the cucumber command from working. 

Known Bugs

* Cucumber command will only work when run from the root of the project. 

Update Notes

Like Beta 1, this is delivered as a gem called taza version 0.8.1. You should
delete that one before installing this one.

If you already have a project created with Beta 1, you will need to add the
following code to the top of your lib/<project_name>.rb file:

  APP_ROOT = File.expand_path(File.join(File.dirname(FILE), '..')) unless defined?(APP_ROOT)

=== Beta 1 / 2009-01-14

Forked from Taza 0.8.1.

Summary of Features

* Tests can be configured to work with different environments.
* Rich page classes simplify tests, and make theme easier to read and maintain.
* Support for both rspec and cucumber style tests.
* Defined pages can be used with both rspec and cucumber tests.
* Generate scripts create templates for pages, specs (rspec tests) and steps (for cucumber tests).

Known Bugs

* Support for FireWatir is incomplete (specifically: Page fields)
* Flows are not supported.
* Need to merge with latest version of taza/master.
* Need to update to latest version of rspec (1.1.12)
* Page fields do not support Radio lists.

Differences from Taza/Master

* Only supports a single site per project
* Simplified directory structure
* Added support for cucumber
* Added spec generator (rspec).
* Addition of Page fields.
* Simplified config files.

This version is delivered as a gem purporting to be taza version 0.8.1. This
will be fixed in a future release.

